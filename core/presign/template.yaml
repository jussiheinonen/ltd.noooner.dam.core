AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: >
  SAM template for PRESIGN endpoint
  BUILD & DEPLOY: sam build && sam deploy
  DESTROY: aws cloudformation delete-stack --stack-name sam-app --region region

Resources:
  # HTTP API
  MyApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowMethods:
          - "POST"
        AllowHeaders:
          - "*"   
        AllowOrigins: 
          - "*"      

  ## Lambda functions
  SignedUrlFunction:
    # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: lib/
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 5
      MemorySize: 128
      Environment:
        Variables:
          UPLOAD_BUCKET: !Ref S3UploadBucket
          DOWNLOAD_BUCKET: !Ref S3DownloadBucket
      Policies:
        - S3WritePolicy:
            BucketName: !Ref S3UploadBucket
        - Statement:
          - Effect: Allow
            Action:
              - s3:putObjectAcl
            Resource: 
              - !Sub "arn:aws:s3:::${S3UploadBucket}/"
        - S3ReadPolicy:
            BucketName: !Ref S3DownloadBucket
        - Statement:
          - Effect: Allow
            Action:
              - s3:putObjectAcl
            Resource: 
              - !Sub "arn:aws:s3:::${S3DownloadBucket}/"
      Events:
        PresignAPI:
          Type: HttpApi
          Properties:
            Path: /presign
            Method: post
            ApiId: !Ref MyApi  

  ## S3 buckets
  S3UploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ltd.noooner.dam.core.upload.${AWS::StackName}"
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"
  S3DownloadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "ltd.noooner.dam.core.download.${AWS::StackName}"
      CorsConfiguration:
        CorsRules:
        - AllowedHeaders:
            - "*"
          AllowedMethods:
            - GET
            - PUT
            - HEAD
          AllowedOrigins:
            - "*"


## Take a note of the outputs for deploying the workflow templates in this sample application
Outputs:
  APIendpoint:
    Description: "HTTP API endpoint URL"
    Value: !Sub "https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/presign"
  S3UploadBucketName:
    Description: "S3 bucket for application uploads"
    Value: !Ref 'S3UploadBucket'
  S3DownloadBucketName:
    Description: "S3 bucket for application downloads"
    Value: !Ref 'S3DownloadBucket'
